/// CTA
 //
 // (Call to action)
 //
 // .mg-cta--green - green variant
 // .mg-cta--darkGreen - darker green variant
 //
 // markup:
 // <button class="mg-cta {{modifier_class}}">Button</button>
 // <a href="#" class="mg-cta {{modifier_class}}">Link</a>
 // <input type="submit" class="mg-cta {{modifier_class}}" value="Input[type=submit]" />
 //
 // Styleguide atoms.cta

/// CTA Arrow
 //
 // .mg-cta--lightBlue - reverse and light blue
 // .mg-cta--lightGreen - reverse and light green
 //
 // markup:
 // <button class="mg-cta mg-cta--arrow {{modifier_class}}">Button</button>
 // <a href="#" class="mg-cta mg-cta--arrow {{modifier_class}}">Link</a>
 // <input type="submit" class="mg-cta mg-cta--arrow {{modifier_class}}" value="Input[type=submit]" />
 //
 // weight: -10
 //
 // Styleguide atoms.cta.arrow

 /// CTA Anchor
 //
 // .mg-cta--anchorGreen - full width off the container
 // .mg-cta--anchorBlue - reverse and light blue
 //
 // markup:
 // <button class="mg-cta mg-cta--arrow mg-cta--anchor {{modifier_class}}">Button</button>
 // <a href="#" class="mg-cta mg-cta--arrow mg-cta--anchor {{modifier_class}}">Link</a>
 //
 // Styleguide atoms.cta.anchor

&-cta.#{$prefix}-cta {
  border: 0 none;
  margin: 0;
  padding: 8px 16px;
  background: color(codgray);
  font-family: $font-opensans-semibolditalic;
  font-size: rem(15px);
  line-height: 1.2;
  color: color(fuego);
  display: inline-block;
  transition: background .25s ease-in-out;
  cursor: pointer;
  text-align: left;
  text-decoration: none;

  &:hover {
    background: lighten(color(codgray), 12%);
  }

  &--arrow {
    position: relative;
    padding-right: 35px;

    &::after {
      content: "";
      position: absolute;
      display: inline-block;
      width: 10px;
      height: 10px;
      transform: rotate(45deg);
      border: 2px solid color(fuego);
      border-bottom: 0 none;
      border-left: 0 none;
      margin: 4px 3px 0 5px;
      box-shadow: 3px -3px 0 0px color(codgray), 4px -4px 0 0px color(fuego);
      transition: margin .1s ease-in;
    }

    &:hover {
      &::after {
        margin: 4px 0 0 8px;
      }
    }

    &.#{$prefix}-cta--lightBlue {
      &::after {
        border-color: color(codgray);
        box-shadow: 3px -3px 0 0px color(lilywhite), 4px -4px 0 0px color(codgray);
      }
    }

    &.#{$prefix}-cta--lightGreen {
      &::after {
        border-color: color(codgray);
        box-shadow: 3px -3px 0 0px color(chiffon), 4px -4px 0 0px color(codgray);
      }
    }

    &.#{$prefix}-cta--anchor {
      &::after {
        transform: rotate(135deg);
        float: left;
        margin: -3px 15px 0 10px;
        border-color: color(codgray);
        box-shadow: 3px -3px 0 0px color(wildsand), 4px -4px 0 0px color(codgray);
      }
    }
  }

  &--lightBlue {
    color: color(codgray);
    background: color(lilywhite);

    &:hover {
      background: darken(color(lilywhite), 5%);
    }
  }

  &--lightGreen {
    color: color(codgray);
    background: color(chiffon);

    &:hover {
      background: darken(color(chiffon), 10%);
    }
  }

  &--anchor {
    box-sizing: border-box;
    width: 100%;
    background: color(wildsand);
    color: color(codgray);
    transition: box-shadow .25s cubic-bezier(0.4, 0, 1, 1);
    font-size: rem(18px);

    @include mq($until: L) {
      font-size: rem(15px);
    }

    &:hover {
      background: color(wildsand);
    }

    &Green {
      box-shadow: inset 0px -4px 0 color(conifer);

      &:hover {
        box-shadow: inset 0px -100px 0 color(conifer);
      }
    }

    &Blue {
      box-shadow: inset 0px -4px 0 color(regent);

      &:hover {
        box-shadow: inset 0px -100px 0 color(regent);
      }
    }

    &LightBlue {
      box-shadow: inset 0px -4px 0 color(lilywhite);

      &:hover {
        box-shadow: inset 0px -100px 0 color(lilywhite);
      }
    }

    &Grey {
      box-shadow: inset 0px -4px 0 silver;
      
      &:hover {
        box-shadow: inset 0px -100px 0 silver;
      }
    }
  }

  &--green {
    background: color(limeade);
    color: color(wildsand);

    &:hover {
      background: darken(color(limeade), 10%);
    }
  }

  &--darkGreen {
    background: color(japlaurel);
    color: color(wildsand);

    &:hover {
      background: darken(color(japlaurel), 10%);
    }
  }
}

